// Generated by CoffeeScript 1.6.3
(function() {
  var player, recorder;

  recorder = angular.module('Recorder', ['ui-rangeSlider']);

  player = function() {
    return window.controller.plugins.playback.player;
  };

  recorder.controller('Controls', [
    '$scope', '$location', function($scope, $location) {
      $scope.maxFrames = function() {
        return window.controller.plugins.playback.player.maxFrames - 1;
      };
      $scope.mode = player().loading ? 'playback' : 'record';
      $scope.min = 0;
      $scope.max = $scope.maxFrames();
      $scope.paused = false;
      $scope.player = player;
      $scope.$watch('min', function(newVal, oldVal) {
        player().setFrameIndex(parseInt(newVal, 10));
        return player().leftCrop();
      });
      $scope.$watch('max', function(newVal, oldVal) {
        player().setFrameIndex(parseInt(newVal, 10));
        return player().rightCrop();
      });
      $scope.record = function() {
        var hand, _i, _len, _ref;
        $scope.mode = 'record';
        _ref = player().controller.lastConnectionFrame.hands;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          hand = _ref[_i];
          player().controller.emit('handLost', hand);
        }
        return player().record();
      };
      $scope.crop = function() {
        $scope.mode = 'crop';
        return player().pause();
      };
      $scope.pauseOnPlaybackButtonClick = function() {
        return $scope.mode === 'playback' && !$scope.paused;
      };
      window.controller.on('ajax:begin', function(player) {
        return $scope.mode = 'playback';
      });
      window.controller.on('ajax:complete', function(player) {
        return $scope.$apply();
      });
      $scope.playback = function($event) {
        $scope.paused = $scope.pauseOnPlaybackButtonClick();
        $scope.mode = 'playback';
        if ($scope.paused) {
          return player().pause();
        } else {
          return player().play();
        }
      };
      return $scope.save = function() {
        return saveAs(new Blob([player()["export"]()], {
          type: "text/JSON;charset=utf-8"
        }), 'lz4.json');
      };
    }
  ]);

}).call(this);
